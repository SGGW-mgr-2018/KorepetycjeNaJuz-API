// <auto-generated />
using System;
using KorepetycjeNaJuz.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KorepetycjeNaJuz.Data.Migrations
{
    [DbContext(typeof(KorepetycjeContext))]
    [Migration("20181028095832_SingleNamesOfEntities")]
    partial class SingleNamesOfEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.CoachAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(1000);

                    b.Property<int>("CoachId");

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("CoachAddresses");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.CoachLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoachId");

                    b.Property<int>("LessonLevelId");

                    b.Property<int>("LessonSubjectId");

                    b.Property<decimal>("RatePerHour");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("LessonLevelId");

                    b.HasIndex("LessonSubjectId");

                    b.ToTable("CoachLessons");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoachAddressId");

                    b.Property<int>("CoachLessonId");

                    b.Property<DateTime>("Date");

                    b.Property<int>("LessonStatusId");

                    b.Property<int>("NumberOfHours");

                    b.Property<string>("OpinionOfCoach");

                    b.Property<string>("OpinionOfStudent");

                    b.Property<byte?>("RatingOfCoach");

                    b.Property<byte?>("RatingOfStudent");

                    b.Property<int>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("CoachAddressId");

                    b.HasIndex("CoachLessonId");

                    b.HasIndex("LessonStatusId");

                    b.HasIndex("StudentId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.LessonLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LevelName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("LessonLevels");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.LessonStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LessonStatuses");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.LessonSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("LessonSubjects");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("DateOfSending");

                    b.Property<int>("OwnerId");

                    b.Property<int>("RecipientId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("RecipientId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Avatar")
                        .HasMaxLength(1000);

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCoach");

                    b.Property<string>("LastName")
                        .HasMaxLength(255);

                    b.Property<string>("Telephone")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.CoachAddress", b =>
                {
                    b.HasOne("KorepetycjeNaJuz.Core.Models.User", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.CoachLesson", b =>
                {
                    b.HasOne("KorepetycjeNaJuz.Core.Models.User", "Coach")
                        .WithMany()
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KorepetycjeNaJuz.Core.Models.LessonLevel", "LessonLevel")
                        .WithMany()
                        .HasForeignKey("LessonLevelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KorepetycjeNaJuz.Core.Models.LessonSubject", "Subject")
                        .WithMany()
                        .HasForeignKey("LessonSubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.Lesson", b =>
                {
                    b.HasOne("KorepetycjeNaJuz.Core.Models.CoachAddress", "CoachAddress")
                        .WithMany()
                        .HasForeignKey("CoachAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KorepetycjeNaJuz.Core.Models.CoachLesson", "CoachLesson")
                        .WithMany()
                        .HasForeignKey("CoachLessonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KorepetycjeNaJuz.Core.Models.LessonStatus", "LessonStatus")
                        .WithMany()
                        .HasForeignKey("LessonStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KorepetycjeNaJuz.Core.Models.User", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KorepetycjeNaJuz.Core.Models.Message", b =>
                {
                    b.HasOne("KorepetycjeNaJuz.Core.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("KorepetycjeNaJuz.Core.Models.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
